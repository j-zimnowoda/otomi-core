# alias oldtomi="bin/otomi"
# alias otomi="binzx/otomi"
alias d="docker"
alias oaws="otomi x aws"
alias oaz="otomi x az"
alias og="otomi x gcloud"
alias ok="otomi x kubectl"
alias k="kubectl"
alias ksk="k -n kube-system"
alias ki="k -n ingress"
alias kh="k -n harbor"
alias kis="k -n istio-system"
alias kk="k -n keycloak"
alias ks="k -n system"
alias ksh="k -n shared"
alias ko="k -n otomi"
alias km="k -n monitoring"
alias kta="k -n team-admin"
alias ka="k --all-namespaces=true"
alias kaa="ka get po,rs,job,deploy,ds,statefulset,svc"
alias kap="ka get po"
alias kcv="k config view"
alias kce="$EDITOR ~/.kube/config"
alias kcg="k config current-context"
alias kcu="k config use-context"
alias kp="k proxy &"

#####
# k8s in Docker
#####
function kint() {
  [ $(act --version | cut -d " " -f 3) = "0.2.24" ] && \
    act -W ./.github/workflows/main.yml -j integration -P self-hosted=ghcr.io/catthehacker/ubuntu:act-20.04 --privileged -b "$@"
  # Some useful options (all can be parsed by appending it to this command, `kint`):
  # `--bind|-b`
  # see act -h for more info
}

alias kintd="EDITOR=vim k9s --kubeconfig ./kind/kubeconfig" 
alias kintk="KUBECONFIG=$PWD/kind/kubeconfig k"

function kintnet() {
  set -e 
  ran=$RANDOM
  kintk run --rm -i --tty netshoot-$ran --image=nicolaka/netshoot --restart=Never -- sh \
    || kintk delete pod network-multitool-$ran
}

function kpo() {
  labels=$1
  shift
  pod=$(k get po -l "$labels" $@ -ojsonpath='{.items[0].metadata.name}')
  k delete po $pod $@
}
function kpk() { ps aux | grep "$@" | awk '{print $2}' | xargs kill; }
function kad() { k delete "$@" --all; }
function kdnp() {
  for ns in default kube-system system monitoring ingress shared; do
    kad networkpolicy -n $ns
  done
}
# force erase all namespaces
function kkns() {
  k proxy &
  k get ns | grep Terminating | awk '{print $1}' | xargs -n1 -- bash -c 'kubectl get ns "$0" -o json | jq "del(.spec.finalizers[0])" > "$0.json"; curl -k -H "Content-Type: application/json" -X PUT --data-binary @"$0.json" "http://127.0.0.1:8001/api/v1/namespaces/$0/finalize"; rm  "$0.json"'
  kk
}
